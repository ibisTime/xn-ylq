<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdkj.ylq.dao.IJourDAO">
	<resultMap id="jour_DB_Result" type="jour">
		<result column="code" property="code" />
		<result column="type" property="type" />
		<result column="user_id" property="userId" />
		<result column="account_number" property="accountNumber" />
		
		<result column="account_type" property="accountType" />
		<result column="currency" property="currency" />
		<result column="biz_type" property="bizType" />
		<result column="biz_note" property="bizNote" />
		<result column="trans_amount"  property="transAmount" /><!-- jdbcType="DECIMAL" --> 
        
		<result column="pre_amount" property="preAmount" /><!-- jdbcType="DECIMAL" --> 
		<result column="post_amount" property="postAmount" /><!-- jdbcType="DECIMAL" --> 
		<result column="status" property="status" />
		<result column="channel_type" property="channelType" />
		<result column="channel_order" property="channelOrder" />
		
		<result column="ref_no" property="refNo" />
		<result column="remark" property="remark" />
		<result column="create_datetime" property="createDatetime" />
		<result column="work_date" property="workDate" />
		<result column="check_user" property="checkUser" />
		
		<result column="check_note" property="checkNote" />
		<result column="check_datetime" property="checkDatetime" />
		<result column="adjust_user" property="adjustUser" />
		<result column="adjust_note" property="adjustNote" />
		<result column="adjust_datetime" property="adjustDatetime" />
	</resultMap>
	
	<sql id="join_condition">
		<if test="relaNameForQuery != null and relaNameForQuery != '' ">
			left join tjd_business_man tu on t.user_id = tu.user_id
		</if>
	</sql>
	
	<sql id="relaNameForQuery_condition">
		<if test="relaNameForQuery != null and relaNameForQuery != '' ">
			AND tu.real_name like "%"#{relaNameForQuery}"%"
		</if>
	</sql>
	
	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			AND 1 = 1
			<if test="code != null and code != '' ">
				AND t.code = #{code}
			</if>
			<if test="type != null and type != '' ">
				AND t.type = #{type}
			</if>
			<if test="refNo != null and refNo != '' ">
				AND t.ref_no = #{refNo}
			</if>
			<if test="accountType != null and accountType != '' ">
				AND t.account_type = #{accountType}
			</if>
			<choose>
			     <when test='channelType == "out"'>
				 	AND t.channel_type not in(0)
				 </when>
				 <otherwise>
					 <if test="channelType != null and channelType != '' ">
						AND t.channel_type = #{channelType}
					 </if>
				 </otherwise>
			</choose>
			<if test="channelOrder != null and channelOrder != '' ">
				AND t.channel_order = #{channelOrder}
			</if>
			<if test="accountNumber != null and accountNumber != '' ">
				AND t.account_number = #{accountNumber}
			</if>
			<if test="userId != null and userId != '' ">
				AND t.user_id = #{userId}
			</if>
			<choose>
			     <when test='type == "NOT_P"'>
				 	AND t.type not in('P')
				 </when>
				 <otherwise>
					 <if test="type != null and type != '' ">
						 AND t.type = #{type}
					 </if>
				 </otherwise>
			</choose>
			<if test="currency != null and currency != '' ">
				AND t.currency = #{currency}
			</if>
			<if test="currencyList != null and currencyList != '' ">
                AND t.currency in
                <foreach item="item" index="index" collection="currencyList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
			<if test="bizType != null and bizType != '' ">
				AND t.biz_type = #{bizType}
			</if>
			<if test="bizTypeList != null and bizTypeList != '' ">
				AND t.biz_type in 
                <foreach item="item" index="index" collection="bizTypeList" open="(" separator="," close=")">
	            	#{item}
                </foreach> 
			</if>
			<choose>
			     <when test='status == "in"'>
				 	AND t.status not in(6)
				 </when>
				 <otherwise>
					 <if test="status != null and status != '' ">
						AND t.status = #{status}
					</if>
				 </otherwise>
			</choose>
			<if test="createDatetimeStart != null and createDatetimeStart != '' ">
				<![CDATA[AND t.create_datetime >= #{createDatetimeStart}]]>
			</if>
			<if test="createDatetimeEnd != null and createDatetimeEnd != '' ">
				<![CDATA[AND t.create_datetime <= #{createDatetimeEnd}]]>
			</if>
			<if test="workDate != null and workDate != '' ">
				AND t.work_date = #{workDate}
			</if>
		</trim>
	</sql>
	
	<select id="select_jour" parameterType="jour" resultMap="jour_DB_Result">
		SELECT
		t.code
		,t.type
		,t.user_id
		,t.account_number
		,t.account_type
		
		,t.currency
		,t.biz_type
		,t.biz_note
		,t.trans_amount
		,t.pre_amount
		
		,t.post_amount
		,t.status
		,t.channel_type
		,t.channel_order
		,t.ref_no
		
		,t.remark
		,t.create_datetime
		,t.work_date
		,t.check_user
		,t.check_note
		
		,t.check_datetime
		,t.adjust_user
		,t.adjust_note
		,t.adjust_datetime
		FROM
		tstd_jour t
		<include refid="join_condition" />
		<include refid="where_condition" />
		<include refid="relaNameForQuery_condition" />
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>

	<select id="select_jour_count" parameterType="jour"
		resultType="java.lang.Long">
		SELECT count(1) FROM tstd_jour t
		<include refid="where_condition" />
	</select>

	<insert id="insert_jour" parameterType="jour">
		INSERT INTO
		tstd_jour(
		code
		,type
		,user_id
		,account_number
		,account_type
		
		,currency
		,biz_type
		,biz_note
		,trans_amount
		,pre_amount
		
		,post_amount
		,status
		,channel_type
		,channel_order
		,ref_no
		
		,remark
		,create_datetime
		,work_date
		,check_user
		,check_note
		
		,check_datetime
		,adjust_user
		,adjust_note
		,adjust_datetime
		)
		VALUES(
		#{code}
		,#{type}
		,#{userId}
		,#{accountNumber}
		,#{accountType}
		
		,#{currency}
		,#{bizType}
		,#{bizNote}
		,#{transAmount}
		,#{preAmount}

		,#{postAmount}
		,#{status}
		,#{channelType}
		,#{channelOrder}
		,#{refNo}

		,#{remark}
		,#{createDatetime}
		,#{workDate}
		,#{checkUser}
		,#{checkNote}
		
		,#{checkDatetime}
		,#{adjustUser}
		,#{adjustNote}
		,#{adjustDatetime}
		)
	</insert>
	
	<update id="update_check_jour" parameterType="jour">
		UPDATE tstd_jour
		SET
		status= #{status}
		,check_user=#{checkUser}
		,check_note=#{checkNote}
		,check_datetime=#{checkDatetime}
		WHERE
		code = #{code}	
	</update>
	
	<update id="update_adjust_jour" parameterType="jour">
		UPDATE tstd_jour
		SET
		status= #{status}
		,adjust_user=#{adjustUser}
		,adjust_note=#{adjustNote}
		,adjust_datetime=#{adjustDatetime}
		WHERE
		code = #{code}	
	</update>
	
	<select id="select_totalAmount" parameterType="jour"
		resultType="java.math.BigDecimal">
		SELECT ifnull(sum(trans_amount),0) FROM tstd_jour t 
		<include refid="where_condition" />
	</select>
	
</mapper>
